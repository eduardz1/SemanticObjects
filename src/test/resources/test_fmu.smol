class SuccessClass()
    Int start()
        FMO[in Double ra, in Double rb, out Double rc] fmu1 = simulate("src/test/resources/adder.fmu");
        FMO[in Double ra, in Double rb ] fmu2 = simulate("src/test/resources/adder.fmu");
        FMO[in Double rb, out Double rc] fmu3 = simulate("src/test/resources/adder.fmu");
        FMO[] fmu4 = simulate("src/test/resources/adder.fmu");
        FMO[in Double ra, in Double rb, out Double rc] fmu5 = simulate("src/test/resources/adder.fmu", ra = 0.0);
        return 1;
    end

    Int assign()
        FMO[in Double ra, in Double rb, out Double rc] fmu1 = simulate("src/test/resources/adder.fmu");
        FMO[in Double ra, in Double rb] fmu2 = simulate("src/test/resources/adder.fmu");
        FMO[in Double rb, out Double rc] fmu3 = simulate("src/test/resources/adder.fmu");
        FMO[] fmu4 = simulate("src/test/resources/adder.fmu");
        FMO[in Double ra, in Double rb, out Double rc] fmu5 = simulate("src/test/resources/adder.fmu", ra = 0.0);
        fmu2 = fmu1;
        fmu3 = fmu1;
        fmu4 = fmu1;
        fmu4 = fmu2;
        fmu4 = fmu3;
        fmu1 = fmu5;
        return 1;
    end

    Int portTest()
        FMO[in Double ra, in Double rb, out Double rc] fmu1 = simulate("src/test/resources/adder.fmu");
        Double dd = fmu1.port("rc");
        fmu1.port("ra") = 2.0;
        return 1;
    end

    Int fieldfail1()
        FMO[in Double ra, in Double rb, out Double rc] fmu1 = simulate("src/test/resources/adder.fmu");
        Double g = fmu1.ra;
    end
    Int fieldfail2()
        FMO[in Double ra, in Double rb, out Double rc] fmu1 = simulate("src/test/resources/adder.fmu");
        fmu1.rc = 1.0;
    end
    Int fieldfail3()
        FMO[in Double ra, in Double rb, out Double rc] fmu1 = simulate("src/test/resources/adder.fmu");
        fmu1.rc = 1;
    end
    Int fieldfail4()
        FMO[in Double ra, in Double rb, out Double rc] fmu1 = simulate("src/test/resources/adder.fmu");
        fmu1.rd = 1;
    end
    Int fieldfail5()
        FMO[in Double ra, in Double rb, out Double rc] fmu1 = simulate("src/test/resources/adder.fmu");
        Double dd = fmu1.rd;
    end
    Int fieldfail6()
        FMO[in Double ra, in Double rb, out Double rc] fmu1 = simulate("src/test/resources/adder.fmu");
        Double dd = fmu1.port("rd");
    end
    Int extra(String str, Double param)
        FMO[] fmu4 = simulate("src/test/resources/adder.fmu");
        fmu4.role = str;
        fmu4.pseudoOffset = param;
        String read = fmu4.role;
        Double pseudoOffset = fmu4.pseudoOffset;
        return 0;
    end
end

class FailClass()
    Int fail1()
        FMO[in Int ra, in Int rb, out Int rc] fmu1 = simulate("src/test/resources/adder.fmu"); //wrong type
        return 1;
    end
    Int fail2()
        FMO[in Double rc, out Double ra, out Double rb] fmu5 = simulate("src/test/resources/adder.fmu"); //wrong order
        return 1;
    end
    Int fail3()
        FMO[in Double ra, in Double rb, out Double rc] fmu5 = simulate("src/test/resources/adder.fmu", rc = 0.0); //inits output
        return 1;
    end
    Int fail4()
        FMO[in Double ra, in Double rb, out Double rc] fmu1 = simulate("src/test/resources/adder.fmu");
        FMO[in Int ia, in Int ib, out Int ic] fmu2 = simulate("src/test/resources/adder.fmu");
        fmu2 = fmu1;
        return 1;
    end
    Int fail5()
        FMO[in Double ra, in Double rb, out Double rc] fmu1 = simulate("src/test/resources/adder.fmu");
        FMO[] fmu2 = simulate("src/test/resources/adder.fmu");
        fmu1 = fmu2;
        return 1;
    end
    Int fail6()
        FMO[in Int rb, out Int rc] fmu1 = simulate("src/test/resources/adder.fmu");
        return 1;
    end
end

main
skip;
end
